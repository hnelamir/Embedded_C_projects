/*
 * HMI_ECU.c
 *
 *  HMI_ECU Source File
 *      Author: hnelamir
 */

#include <avr/io.h>
#include <util/delay.h>
#include "std_types.h"
#include "uart.h"
#include "timer1.h"
#include "keypad.h"
#include "lcd.h"
#define SUCCESS 1
#define FAILED 0



/*                     Global variables                       */

uint8 g_HMI_ticks=0;
uint8 g_check=0;
uint8 g_counter=0;
uint8 g_Pass_Check=0;

/*                     Functions                              */
void First_Pass(){
	uint8 F_pass=-1,i=0;
	LCD_clearScreen();
	LCD_displayString("plz enter pass:");
	LCD_moveCursor(1,0);
	UART_sendByte('F');
	for(i=0;i<5;i++){
		F_pass=KEYPAD_getPressedKey();
		if ((F_pass<=9)&&(F_pass>=0)){
			LCD_displayCharacter('*');
			UART_sendByte(F_pass);

		}
		else
			i--;
	_delay_ms(500);
	}
	F_pass=KEYPAD_getPressedKey();
	if(F_pass=='='){
		LCD_clearScreen();
		LCD_displayString("plz re-enter the");
		LCD_moveCursor(1,0);
		LCD_displayString("same pass:");
		UART_sendByte(F_pass);
	}
	LCD_moveCursor(1,11);

	for(i=0;i<5;i++){
			F_pass=KEYPAD_getPressedKey();
			if ((F_pass<=9)&&(F_pass>=0)){
				LCD_displayCharacter('*');
				UART_sendByte(F_pass);

			}
			else
				i--;
		_delay_ms(500);
		}
	F_pass=KEYPAD_getPressedKey();
	if(F_pass=='='){
		UART_sendByte('=');

	}
	g_check=UART_recieveByte();
	if(g_check){
		/*LCD_clearScreen();*/
	}
	else {
		LCD_clearScreen();
		First_Pass();}


}

void Password(){
	uint8 Pass=-1,temp=0;
	g_Pass_Check=SUCCESS;
	LCD_displayString("plz enter pass:");
	LCD_moveCursor(1,0);
		for(int i=0;i<5;i++){
			Pass=KEYPAD_getPressedKey();
			if ((Pass<=9)&&(Pass>=0)){
				LCD_displayCharacter('*');
				UART_sendByte(Pass);
			}
			else
				i--;
		_delay_ms(500);
		}
	Pass=KEYPAD_getPressedKey();
	if(Pass=='='){
		g_Pass_Check=UART_recieveByte();
		_delay_ms(500);
		}
	if(g_Pass_Check==SUCCESS){
		LCD_clearScreen();
		LCD_displayString("A7A");
		_delay_us(500);
	}
	else{
		LCD_clearScreen();
		LCD_displayString("NEEK");
		_delay_us(500);
	}
}
void Buzzer_HMI(){
	LCD_clearScreen();
	UART_sendByte('B');
	LCD_displayString("ERROR");
	g_HMI_ticks=0;
	while(g_HMI_ticks<0);
	g_HMI_ticks=0;
}

void Change_Pass(){
	LCD_clearScreen();
	UART_sendByte('S');
	Password();
	if(g_Pass_Check==SUCCESS){
		g_counter=0;
		First_Pass();
			}
	else{
			g_counter++;
			if(g_counter==3){
				Buzzer_HMI();
				g_counter=0;
			}
			else{
				Change_Pass();
			}
	}

}

void HMI_Ticks(){
	g_HMI_ticks++;
}

/*                     Main Function                          */

int main(void){
	uint8 Input;
	/* Timer1 initial setup
	 *  Initial Value=0
	 *  Compare Value=999
	 *  Prescaler = 1024
	 *  Mode = CTC (Compare)
	 */
	Timer1_ConfigType TimConfig_HMI={0,999,F_CPU_1024,CTC};
	Timer1_init(&TimConfig_HMI);
	/* UART frame Setup
	 * 	Date Length=8
	 * 	Parity type=Even
	 * 	Stop Bits=1
	 * 	Baudrate=9600
	 */
	UART_ConfigType UARTConfig_HMI={EIGHT,EVEN,ONE_BIT,BR7};
	UART_init(&UARTConfig_HMI);
	Timer1_setCallBack(HMI_Ticks);
	LCD_init();
	First_Pass();

	while(1){
		LCD_clearScreen();
		LCD_displayString("+ : Open Door");
		LCD_moveCursor(1,0);
		LCD_displayString("- : Change Pass");
		Input=KEYPAD_getPressedKey();
		switch(Input){
		case '+':
			break;
		case '-':
			g_counter=0;
			Change_Pass();
			break;
		}
	}

}
